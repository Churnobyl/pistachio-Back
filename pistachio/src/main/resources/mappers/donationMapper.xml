<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.pistachio.model.dao.DonationDao">

    <!-- 기부 -->
<!--    피스타 추가하기-->
    <update id="updatePista" parameterType="addPistaRequest">
        UPDATE user
        SET pista = pista + ${pistaAmount}
        WHERE id = #{userId}
    </update>

    <update id="subPista" parameterType="donationRequest">
        UPDATE user
        SET pista = pista - ${amount}
        WHERE id = #{userId}
    </update>

<!--    해당 유저의 기부 전체 조회-->
    <select id="selectAllByUserId" parameterType="long">
        SELECT
        d.id as id,
        m.name as agencyName,
        m.agency_profile_url as agencyProfile,
        d.project_id as projectId,
        dp.name as projectName,
        dp.description as projectDescription,
        d.user_id as userId,
        d.amount as amount,
        d.is_boast as isBoast
        FROM donation d
        LEFT JOIN donate_project dp
        ON d.project_id = dp.id
        LEFT JOIN membership m
        ON dp.agency_id = m.id
        WHERE user_id = #{userId}
    </select>

    <!--  단체  -->
    <insert id="createDonation" parameterType="donationRequest">
        INSERT INTO donation
        (project_id, user_id, amount)
        VALUES
        (#{projectId}, #{userId}, #{amount})
    </insert>

    <update id="updateBoast" parameterType="feedRequest">
        UPDATE donation
        SET is_boast = true
        WHERE user_id = #{userId} AND project_id = #{projectId}
    </update>

<!--    단체 생성-->
    <insert id="createMembership" parameterType="addMembershipRequest" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO membership
        (name, agency_profile_url)
        VALUES
        (#{name}, #{agencyProfileUrl})
    </insert>

    <!-- 프로젝트 -->

<!--    단체의 프로젝트 생성-->
    <insert id="createDonateProject" parameterType="addDonateProjectRequest" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO donate_project
        (agency_id, name, description, image, target_donation_amount, start_time, end_time)
        VALUES
        (#{agencyId}, #{name}, #{description}, #{image}, #{targetDonationAmount}, #{startTime}, #{endTime})
    </insert>

<!--    특정 단체의 프로젝트 전체 조회-->
    <select id="selectAllDonateProjectByAgencyId" parameterType="long">
        SELECT
        dp.id as id,
        dp.agency_id as agencyId,
        m.name as agencyName,
        dp.name as name,
        dp.description as description,
        dp.participants as participants,
        dp.image as image,
        dp.current_donation_amount as current_donation_amount,
        dp.target_donation_amount as target_donation_amount,
        dp.start_time as start_time,
        dp.end_time as end_time,
        dp.is_end as is_end
        FROM donate_project dp
        LEFT JOIN membership m
        ON dp.agency_id = m.id
        WHERE dp.agency_id = #{agencyId}
    </select>

<!--    특정 단체의 프로젝트 상세 조회-->
    <select id="selectOneDonateProjectById" parameterType="long">
        SELECT
        dp.id as id,
        dp.agency_id as agencyId,
        m.name as agencyName,
        dp.name as name,
        dp.description as description,
        dp.participants as participants,
        dp.image as image,
        dp.current_donation_amount as current_donation_amount,
        dp.target_donation_amount as target_donation_amount,
        dp.start_time as start_time,
        dp.end_time as end_time,
        dp.is_end as is_end
        FROM donate_project dp
        LEFT JOIN membership m
        ON dp.agency_id = m.id
        WHERE dp.id = #{projectId}
    </select>

    <update id="updateAmountForDonateProject" parameterType="donationRequest">
        UPDATE donate_project
        SET current_donation_amount = current_donation_amount + ${amount}
        WHERE id = #{projectId}
    </update>

    <update id="updateProjectParticipant" parameterType="long">
        UPDATE donate_project
        SET participants = participants + 1
        WHERE id = #{projectId}
    </update>

<!--    피스타치오와 단체-->

<!--    가입-->
    <insert id="insertAffiliation" parameterType="affiliationRequest">
        INSERT INTO affiliated
        (donated_user_id, project_id)
        VALUES
        (#{userId}, #{projectId})
    </insert>

<!--    해당 유저 가입 정보 확인-->
    <select id="selectAffiliationByUserId" parameterType="long">
        SELECT count(id) FROM affiliated
        WHERE donated_user_id = #{userId}
    </select>

<!--  탈퇴  -->
    <delete id="deleteAffiliation" parameterType="long">
        DELETE FROM affiliated
        WHERE donated_user_id = #{userId}
    </delete>

</mapper>