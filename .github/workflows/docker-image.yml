name: Docker Image CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ssafy
          MYSQL_DATABASE: pistachio
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Create application-SECRET.properties
      run: |
        echo "${{ secrets.APPLICATION_SECRET_PROPERTIES }}" > ./pistachio/src/main/resources/application-SECRET.properties

    - name: Download wait-for-it.sh
      run: |
        curl -o wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
        chmod +x wait-for-it.sh

    - name: Wait for MySQL and Redis to be ready
      run: ./wait-for-it.sh database:3306 -- echo "MySQL is up" && ./wait-for-it.sh redis:6379 -- echo "Redis is up"

    - name: Build with Maven
      run: mvn -B clean package --file ./pistachio/pom.xml
      env:
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/pistachio
        SPRING_DATASOURCE_USERNAME: root
        SPRING_DATASOURCE_PASSWORD: ssafy
        SPRING_REDIS_HOST: localhost
        SPRING_REDIS_PORT: 6379

    - name: Copy JAR to build context
      run: cp ./pistachio/target/*.jar ./app.jar

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: churnobyl/pistachio:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    needs: build-and-test
    name: Deploy
    runs-on: [ self-hosted, label-example-be ]
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Docker run
        run: |
            docker ps -q --filter "name=pistachio_backend" | grep -q . && docker stop pistachio_backend && docker rm -fv pistachio_backend
            docker run -d -p 80:80 --name pistachio_backend --restart always churnobyl/pistachio:latest
